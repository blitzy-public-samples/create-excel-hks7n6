name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: excel-cluster
  GKE_ZONE: us-central1-c

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy frontend to GCS (Staging)
      run: |
        gsutil -m rsync -r frontend-build gs://${{ secrets.GCS_BUCKET_STAGING }}

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Deploy backend to GKE (Staging)
      run: |
        kubectl apply -f k8s/staging/
        kubectl rollout status deployment/excel-backend -n staging

    - name: Run integration tests
      run: |
        # HUMAN ASSISTANCE NEEDED
        # Add commands to run integration tests against the staging environment
        # Example: npm run test:integration

    - name: Deploy to production
      if: success()
      run: |
        gsutil -m rsync -r frontend-build gs://${{ secrets.GCS_BUCKET_PROD }}
        kubectl apply -f k8s/production/
        kubectl rollout status deployment/excel-backend -n production

    - name: Send deployment status notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Deployment to ${{ job.status == 'success' && 'production' || 'staging' }} ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}